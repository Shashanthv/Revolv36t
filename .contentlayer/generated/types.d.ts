// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Blog = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Blog'
  slug: string
  publishedAt: IsoDateTimeString
  category: string
  featured: boolean
  en: BlogEN
  /** MDX file body */
  body: MDX
  path: string
}

export type Service = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Service'
  slug: string
  parentService?: string | undefined
  en: ServiceEN
  /** MDX file body */
  body: MDX
  path: string
}  

/** Nested types */
export type BlogEN = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'BlogEN'
  title: string
  description: string
  author: string
  readingTime: string
  content: string
  metadata: BlogMetadata

}

export type BlogMetadata = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'BlogMetadata'
  metaTitle: string
  metaDescription: string
  openGraph: any
  twitterCard: any

}

export type ServiceEN = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'ServiceEN'
  title: string
  description: string
  metadata: ServiceMetadata
  features?: any | undefined
  content: string

}

export type ServiceMetadata = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'ServiceMetadata'
  metaTitle: string
  metaDescription: string
  openGraph: any
  twitterCard: any

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Blog | Service
export type DocumentTypeNames = 'Blog' | 'Service'

export type NestedTypes = BlogEN | BlogMetadata | ServiceEN | ServiceMetadata
export type NestedTypeNames = 'BlogEN' | 'BlogMetadata' | 'ServiceEN' | 'ServiceMetadata'

export type DataExports = {
  allDocuments: DocumentTypes[]
  allBlogs: Blog[]
  allServices: Service[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Blog: Blog
  Service: Service
}

export type NestedTypeMap = {
  BlogEN: BlogEN
  BlogMetadata: BlogMetadata
  ServiceEN: ServiceEN
  ServiceMetadata: ServiceMetadata
}

 